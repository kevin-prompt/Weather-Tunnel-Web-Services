<?xml version="1.0"?>
<configuration>
  
  <configSections>
  </configSections>
  
  <system.diagnostics>
    <trace>
      <listeners>
        <add type="Microsoft.WindowsAzure.Diagnostics.DiagnosticMonitorTraceListener, Microsoft.WindowsAzure.Diagnostics, Version=2.8.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
          name="AzureDiagnostics">
          <filter type="" />
        </add>
      </listeners>
    </trace>
  </system.diagnostics>
  
  <appSettings>
    <!-- ** This has been moved to the Roles-Settings so the all roles can have access to the application settings. **-->
    <!-- ** All settings listed here are simply for documentation. The real settings are access using RoleEnvironment. **-->
    <!-- This is the name of the application. -->
    <add key="ApplicationName" value="CoolftcWTClimate" />
    <!-- Set the Ledger Log recording level.-->
    <add key="All_LedgerLevel" value="-1" />
    <!-- The soonest data in the Cache can be refreshed. -->
    <add key="Forcetime" value="300" />
    <!-- The lifetime of the data in the Cache. -->
    <add key="Lifetime" value="35" />
    <!-- The age at which the data in the Cache should not be returned. -->
    <add key="Deathtime" value="1500" />
    <!-- The maximum WU-API calls per minuted allowed. -->
    <add key="MaxMinute" value="400" />
    <!-- The maximum WU-API calls per day allowed. -->
    <add key="MaxDay" value="95000" />
    <!-- The maximum memory allocation per server for the Cache. -->
    <add key="CacheSize" value="768" />
    <!-- The name of the Endpoint used to allow Cache to network. -->
    <add key="CacheEndPoint" value="Memcached" />
    <!-- This is the based address to use for Weather Underground requests. -->
    <add key="WUIendpoint" value="http://api.wunderground.com/api/" />
    <!-- Weather Underground API key.-->
    <add key="WUIkey" value="cef3f17cda4affce" />
    <!--<add key="WUIkey" value="49aa28b6d6039d9c" /> -->
    <!-- Weather Underground API fail-over keys. -->
    <add key="WUIkeyFailKeys" value="" />
    <!-- WT Administrative key-->
    <add key="WTSkey" value="387wodpjfQWER987" />
    <!-- Formatting value added to end of Weather Underground requests.-->
    <add key="WUIformat" value=".xml" />
  </appSettings>
  
  <system.web>
    <compilation debug="false" targetFramework="4.0" />
    <httpRuntime requestValidationMode="2.0" requestPathInvalidCharacters="" />
    <pages validateRequest="false" />
  </system.web>
  
  <!-- WCF Host Information -->
  <system.serviceModel>
    <!-- WCF Binding Information Client or Server -->
    <bindings>
      <wsHttpBinding>
        <binding name="wsHttpBindingSettings" closeTimeout="00:10:00" openTimeout="00:10:00" sendTimeout="00:10:00" maxReceivedMessageSize="2147483647" maxBufferPoolSize="2147483647" messageEncoding="Text">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </wsHttpBinding>
      <basicHttpBinding>
        <binding name="wsHttpBindingBasic" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="wsHttpBindingRest" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
          </security>
        </binding>
      </webHttpBinding>
    </bindings>
    
    <!-- WCF Service Endpoints and Behaviors -->
    <services>
      <service name="Coolftc.WTClimate.Climate" behaviorConfiguration="ClimateBahavior">
        <!-- Service Endpoints -->
        <endpoint address="/ws"
                  binding="wsHttpBinding"
                  bindingConfiguration="wsHttpBindingSettings"
                  contract="Coolftc.WTClimate.IClimate"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="/basic"
                  binding="basicHttpBinding"
                  bindingConfiguration="wsHttpBindingBasic"
                  contract="Coolftc.WTClimate.IClimate"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="/rest"
                  behaviorConfiguration="ClimateBehaviorRest"
                  binding="webHttpBinding"
                  bindingConfiguration="wsHttpBindingRest"
                  contract="Coolftc.WTClimate.IClimate"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="Coolftc.WTClimate.Support" behaviorConfiguration="SupportBahavior">
        <!-- Service Endpoints -->
        <endpoint address="/ws"
                  binding="wsHttpBinding"
                  bindingConfiguration="wsHttpBindingSettings"
                  contract="Coolftc.WTClimate.ISupport"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="/basic"
                  binding="basicHttpBinding"
                  bindingConfiguration="wsHttpBindingBasic"
                  contract="Coolftc.WTClimate.ISupport"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="/rest"
                  behaviorConfiguration="SupportBehaviorRest"
                  binding="webHttpBinding"
                  bindingConfiguration="wsHttpBindingRest"
                  contract="Coolftc.WTClimate.ISupport"
                  bindingNamespace="http://coolftc.org/">
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="ClimateBahavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
        <behavior name="SupportBahavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="ClimateBehaviorRest">
          <webHttp/>
          <!-- The webHttp returns data fomatted as plain old xml (POX)-->
          <!--<enableWebScript  />  enableWebScript can return JSON formatted data, but not for REST services.-->
        </behavior>
        <behavior name="SupportBehaviorRest">
          <webHttp/>
          <!-- The webHttp returns data fomatted as plain old xml (POX)-->
          <!--<enableWebScript  />  enableWebScript can return JSON formatted data, but not for REST services.-->
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />

    <!-- WCF Client Information -->
  
  </system.serviceModel>
  <system.webServer>
    <!-- The runAllManagedModulesForAllRequests can be set to true if you will have a uri that is not recognizable, e.g. rewritten to remove the .svc.-->
    <modules runAllManagedModulesForAllRequests="false" />
  </system.webServer>
</configuration>